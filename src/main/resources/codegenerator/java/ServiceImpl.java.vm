package ${basePackage}.service.impl;

import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import ${basePackage}.common.domain.PageResultDTO;
import ${basePackage}.common.domain.ResponseDTO;
import ${basePackage}.mapper.${moduleClass}Mapper;
import ${basePackage}.domain.dto.add.${moduleClass}AddDTO;
import ${basePackage}.domain.dto.update.${moduleClass}UpdateDTO;
import ${basePackage}.domain.dto.query.${moduleClass}QueryDTO;
import ${basePackage}.domain.entity.${moduleClass}Entity;
import ${basePackage}.domain.vo.${moduleClass}VO;
import ${basePackage}.domain.vo.excel.${moduleClass}ExcelVO;
import ${basePackage}.utils.SmartPageUtil;
import ${basePackage}.utils.SmartBeanUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import lombok.extern.slf4j.Slf4j;

import java.util.List;

/**
 * [ ${tableDesc} ]
 *
 * @author ${author}
 * @version 1.0
 * @company ${company}
 * @copyright (c)  ${company}Inc. All rights reserved.
 * @date ${date}
 * @since JDK1.8
 */
@Slf4j
@Service
public class ${moduleClass}ServiceImpl implements ${moduleClass}Service{

    @Autowired
    private ${moduleClass}Mapper ${moduleVar}Mapper;

    /**
     * 根据id查询
     */
    public ${moduleClass}Entity queryById(Long id){
        return  ${moduleVar}Mapper.selectById(id);
    }

    /**
     * 分页查询
     * @author ${author}
     */
    public ResponseDTO<PageResultDTO<${moduleClass}VO>> queryByPage(${moduleClass}QueryDTO queryDTO) {
        Page page = SmartPageUtil.convert2QueryPage(queryDTO);
        IPage<${moduleClass}VO> voList = ${moduleVar}Mapper.selectByPage(page, queryDTO);
        PageResultDTO<${moduleClass}VO> pageResultDTO = SmartPageUtil.convert2PageResult(voList);
        return ResponseDTO.succData(pageResultDTO);
    }

    /**
     * 添加
     * @author ${author}
     */
    public ResponseDTO<String> add(${moduleClass}AddDTO addDTO) {
        ${moduleClass}Entity entity = SmartBeanUtil.copy(addDTO, ${moduleClass}Entity.class);
        ${moduleVar}Mapper.insert(entity);
        return ResponseDTO.succ();
    }

    /**
     * 编辑
     * @author ${author}
     */
    @Transactional(rollbackFor = Exception.class)
    public ResponseDTO<String> modify(${moduleClass}UpdateDTO updateDTO) {
        ${moduleClass}Entity entity = SmartBeanUtil.copy(updateDTO, ${moduleClass}Entity.class);
        ${moduleVar}Mapper.updateById(entity);
        return ResponseDTO.succ();
    }

    /**
     * 删除
     * @author ${author}
    */
    @Transactional(rollbackFor = Exception.class)
    public ResponseDTO<String> remove(Long id) {
        ${moduleVar}Mapper.deleteById(id)
        return ResponseDTO.succ();
    }

    /**
     * 批量删除
     * @author ${author}
     */
    @Transactional(rollbackFor = Exception.class)
    public ResponseDTO<String> removeByIds(List<Long> idList) {
        QueryWrapper<SysAuthority> qw = new QueryWrapper<>();
        qw.in("id", ids);
        ${moduleVar}Mapper.delete(qw)
        return ResponseDTO.succ();
    }

    /**
     * 查询全部导出对象
     * @author ${author}
     */
    public List<${moduleClass}ExcelVO> queryAllExportData(${moduleClass}QueryDTO queryDTO) {
        return ${moduleVar}Mapper.selectAllExportData(queryDTO);
    }

    /**
     * 批量查询导出对象
     * @author ${author}
     */
    public List<${moduleClass}ExcelVO> queryBatchExportData(List<Long> idList) {
        return ${moduleVar}Mapper.selectBatchExportData(idList);
    }
}
